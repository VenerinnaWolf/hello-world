# Работа с файлами

#            -----            #
#            Файлы            #
#            -----            #

# --------------------
# -- Открытие файла --
# --------------------

inFile = open('input.txt', 'r', encoding='utf8')

# Первый параметр - имя файла.
# Второй параметр - режим доступа:
# - r - чтение
# - r+ - чтение и запись
# - w - перезапись данных (старые данные стираются). Создает файл, если его не существует
# - a - добавление данных в конец (старые данные сохраняются). Создает файл, если его не существует

# Также есть другие параметры, например, кодировка (utf8 - самая распространенная)
# Эта функция возвращает ссылку на объект типа файл.

# -- Конструкция with ... as ... ---
# Эта конструкция позволяет открыть файл, а после автоматически закрыть.

with open('photo.jpg', 'r+') as f:
    jpgdata = f.read()

# ------------------
# -- Чтение файла --
# ------------------

# 1. Метод .readlines() - возвращает список всех строк (lines) файла
# ! Строки попадают в список вместе с символом перевода строки.
lines = inFile.readlines()

# 2. Метод .read() - считывает символы файла в одну строковую переменную
# (при этом содержащую в себе переводы строки \n).
oneLine = inFile.read()  # считает все содержимое
oneLine = inFile.read(5)  # считает первые 5 символов

# 3. Метод .readline() - считывает одну строку из файла
inFile.readline()   # прочитать первую строку
inFile.readline(2)  # прочитать вторую строку

# -------------------
# -- Запись в файл --
# -------------------

my_file = open("output.txt", "w")

# 1. Метод .write() - записывает строку в файл
my_file.write("Люблю Python!\nЭто крутой язык!")

# Для перевода на следующую строку нужно использовать \n

# Пример с циклом:
lines = ["one", "two", "three"]
for line in lines:
    my_file.write(line + '\n')

# 2. Метод .print() с передачей файла в качестве аргумента
print("Еще одна строка", file=my_file)

# Здесь перевод строки ставится автоматически

lines = ["one", "two", "three"]
for line in lines:
    print(line, file=my_file)

# 3. Метод .writelines(sequence) - добавляет последовательность строк в файл

# --------------------
# -- Закрытие файла --
# --------------------

inFile.close()
my_file.close()

# -- Конструкция with ... as ... ---
# Эта конструкция позволяет автоматически закрыть файл (даже если произошли ошибки при открытии)

with open('photo.jpg', 'r+') as f:
    jpgdata = f.read()

# ---------------------------
# -- Примеры использования --
# ---------------------------

# Простой пример: считать все строки файла input.txt и вывести каждую строку развернутой в файл output.txt:
inFile = open('input.txt', 'r', encoding='utf8')
outFile = open('output.txt', 'w', encoding='utf8')
lines = inFile.readlines()
for line in lines:
    print(line[-2::-1], file=outFile)  # -2 нужно для отсечения символа перевода строки /n
inFile.close()
outFile.close()

# Можно было сделать и без считывания всего файла в переменную: (переменные типа файл являются iterable)
inFile = open('input.txt', 'r', encoding='utf8')
outFile = open('output.txt', 'w', encoding='utf8')
for line in inFile:
    print(line[-2::-1], file=outFile)
inFile.close()
outFile.close()

# -------------------
# -- Другие методы --
# -------------------

# rename(src, dst) - переименование файла src в dst. Требует поключения модуля os
import os
os.rename("xyz.txt", "abc.txt")  # переименование xyz.txt в abc.txt

# file.fileno()     - возвращает целочисленный дескриптор файла
# file.flush()      - очищает внутренний буфер
# file.isatty()     - возвращает True, если файл привязан к терминалу
# file.next()       - возвращает следующую строку файла
# file.seek(offset[,whene]) - устанавливает текущую позицию в файле
# file.seekable()   - проверяет, поддерживает ли файл случайный доступ. Возвращает True, если да
# file.tell()       - возвращает текущую позицию в файле
# file.truncate(n)  - уменьшает размер файла. Если n указано, то файл обрезается до n байт, если нет — до текущей позиции
# file.write(str)   - добавляет строку str в файл
# file.writelines(sequence) - добавляет последовательность строк в файл
